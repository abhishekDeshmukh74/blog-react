{"version":3,"sources":["Blog-post.tsx","constants.ts","Blog-list.tsx","Comment.tsx","Blog-details.tsx","App.tsx","reportWebVitals.ts","reducer.ts","store.ts","index.tsx"],"names":["BlogPost","id","title","body","userId","dispatch","useDispatch","className","onClick","type","payload","API_ENDPOINT","BlogList","useState","blogList","setBlogList","filteredList","setFilteredList","useEffect","a","axios","get","data","fetchBlogList","placeholder","onChange","event","searchValue","target","value","filter","blog","toLowerCase","includes","map","to","Comment","postId","name","email","BlogDetails","useParams","selectedBlog","useSelector","state","comments","setComments","console","log","getComments","Button","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4695aa2.chunk.js","sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport './Blog-post.css';\r\n\r\nexport interface IBlog {\r\n  body: string;\r\n  title: string;\r\n  id: string;\r\n  userId: string;\r\n}\r\n\r\n\r\nfunction BlogPost({ id, title, body, userId }: IBlog) {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = () => {\r\n    dispatch({\r\n      type: 'SELECT_BLOG',\r\n      payload: { id, title, body, userId }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='blog-post' onClick={handleClick}>\r\n      <h2>\r\n        {id}: {title}\r\n      </h2>\r\n      <p>{body}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogPost;\r\n","export const API_ENDPOINT = 'https://jsonplaceholder.typicode.com/'\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Blog-list.css';\r\nimport BlogPost, { IBlog } from './Blog-post';\r\nimport { API_ENDPOINT } from './constants';\r\n\r\nfunction BlogList() {\r\n  const [blogList, setBlogList] = useState<IBlog[]>([]);\r\n  const [filteredList, setFilteredList] = useState<IBlog[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchBlogList() {\r\n      const { data } = await axios.get(`${API_ENDPOINT}posts`);\r\n      setBlogList(data);\r\n      setFilteredList(data);\r\n    }\r\n    fetchBlogList();\r\n  }, []);\r\n\r\n  const handleInputChange = (event: any) => {\r\n    const searchValue = event.target.value;\r\n    const filteredList = blogList.filter((blog) => {\r\n      return blog.title.toLowerCase().includes(searchValue.toLowerCase());\r\n    });\r\n    setFilteredList(filteredList);\r\n  };\r\n\r\n  return (\r\n    <div className='blog-list'>\r\n      <input className=\"search-box\" type='text' id='filter' placeholder='Search for blog title...' onChange={handleInputChange} />\r\n      {filteredList.map(({ id, title, userId, body }) => (\r\n        <Link to={`/blog/${id}`}>\r\n          <BlogPost key={id} id={id} title={title} userId={userId} body={body} />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogList;\r\n","import './Comment.css';\r\n\r\nexport interface IComment {\r\n  postId: number;\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  body: string;\r\n}\r\n\r\nfunction Comment({ id, postId, name, email, body }: IComment) {\r\n  return (\r\n    <div className='comment'>\r\n      <p>name: {name}</p>\r\n      <p>email: {email}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nimport './Blog-post.css';\r\nimport { API_ENDPOINT } from './constants';\r\nimport Comment, { IComment } from './Comment';\r\nimport { State } from './reducer';\r\n\r\nfunction BlogDetails() {\r\n  const { id }: any = useParams();\r\n  const selectedBlog = useSelector<State, State['selectedBlog']>((state) => state.selectedBlog);\r\n  const [comments, setComments] = useState<IComment[]>([]);\r\n  console.log('selectedBlog:', selectedBlog)\r\n\r\n  const getComments = async () => {\r\n    const { data } = await axios.get(`${API_ENDPOINT}comments?postId=${id}`);\r\n    setComments(data);\r\n  };\r\n\r\n  return (\r\n    <div className='blog-details'>\r\n      <h2>\r\n        {id}: {selectedBlog.title}\r\n      </h2>\r\n      <p>{selectedBlog.body}</p>\r\n      <Button onClick={getComments}>Load Comments</Button>\r\n      <div className='comments'>\r\n        {comments.map(({ id, postId, name, email, body }) => (\r\n          <Comment key={id} id={id} postId={postId} name={name} email={email} body={body} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogDetails;\r\n","import './App.css';\nimport BlogList from './Blog-list';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport BlogDetails from './Blog-details';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'></div>\n      <Switch>\n        <Route exact path='/'>\n          <BlogList />\n        </Route>\n        <Route exact path='/blog/:id'>\n          <BlogDetails />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface State {\r\n  selectedBlog: any;\r\n}\r\n\r\nconst initialState = {\r\n  selectedBlog: null,\r\n};\r\n\r\ntype Action = {\r\n  type: 'SELECT_BLOG';\r\n  payload: string;\r\n};\r\n\r\nexport const reducer = (state: State = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case 'SELECT_BLOG':\r\n      return {\r\n        ...state,\r\n        selectedBlog: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}